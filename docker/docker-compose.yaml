services:
  app:
    build:
      context: .
      dockerfile: docker/Dockerfile
    image: ${IMAGE_NAME:-gowebtemplate}
    container_name: gowebtemplate
    environment:
      - PORT=${PORT:-8080}
      - DB_HOST=${DB_HOST:-db}
      - DB_PORT=${POSTGRES_PORT:-5432}
      - DB_USER=${POSTGRES_USER:-user}
      - DB_PASSWORD=${POSTGRES_PASSWORD:-Password123!}
      - DB_NAME=${POSTGRES_DB:-test}
    ports:
      - "${PORT:-8080}:${PORT:-8080}"
    depends_on:
      db:
        condition: service_healthy
      cache:
        condition: service_started
    restart: always
  db:
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-Password123!}
      POSTGRES_DB: ${POSTGRES_DB:-test}
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"
        ]
      interval: 1s
      timeout: 5s
      retries: 10
    restart: unless-stopped
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
  cache:
    image: redis
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 5s
      retries: 10
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"